{"version":3,"sources":["Images/logo2.jpg","Components/Navbar.js","Components/Movieinfo.js","Components/Menu.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","class","href","src","logo2","width","height","alt","value","onChange","event","SetSearchValue","target","placeholder","aria-label","type","Movieinfo","_ref","id","title","overview","media_type","genre_ids","name","poster_path","vote_average","selectMovie","updateSelectedGenre","_React$useState","selectedGenre","React","useState","_React$useState2","Object","slicedToArray","modalShow","setModalShow","styles","useSpring","from","opacity","to","config","duration","genres","map","num","Genres","genreIds","genreId","index","style","cursor","onClick","className","Modal","assign","size","aria-labelledby","centered","Header","display","justifyContent","alignItems","Title","fontSize","Body","gap","backgroundColor","flexDirection","Card","Img","variant","flexGrow","Footer","Button","onHide","show","react_spring_esm","div","Text","borderRadius","textAlign","Math","round","toFixed","Menu","popular","upcoming","bestranked","ListGroup","horizontal","Item","App","movies","setMovies","_React$useState3","_React$useState4","searchValue","_React$useState5","_React$useState6","selectedMovie","_React$useState7","_React$useState8","_React$useState9","_React$useState10","movieID","trendingurl","topratedurl","upcomingurl","concat","useEffect","console","log","fetch","then","res","json","data","results","src_Components_Navbar","Components_Menu","movieReq","src_Components_Movieinfo","key","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.8a4968c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo2.d05a4d21.jpg\";","import React from \"react\";\r\nimport \"react-bootstrap\";\r\nimport \"./Navbar.css\";\r\nimport logo2 from \"../Images/logo2.jpg\";\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <div>\r\n      <nav class=\"navbar navbar-light bg-light\">\r\n        <a class=\"navbar-brand\" href=\"#\">\r\n          <img\r\n            src={logo2}\r\n            width=\"120\"\r\n            height=\"120\"\r\n            class=\"d-inline-block align-top\"\r\n            alt=\"\"\r\n          ></img>\r\n        </a>\r\n\r\n        <form class=\"form-inline\">\r\n          <input\r\n            class=\"form-control mr-sm-2\"\r\n            value={props.value}\r\n            onChange={(event) => props.SetSearchValue(event.target.value)}\r\n            placeholder=\"Search movie\"\r\n            aria-label=\"Search\"\r\n          />\r\n          <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\r\n            Search\r\n          </button>\r\n        </form>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import \"./Movieinfo.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport React, { Fragment, useEffect } from \"react\";\r\n\r\nconst Movieinfo = ({\r\n  id,\r\n  title,\r\n  overview,\r\n  media_type,\r\n  genre_ids,\r\n  name,\r\n  poster_path,\r\n  vote_average,\r\n  selectMovie,\r\n  updateSelectedGenre,\r\n  selectedGenre,\r\n}) => {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const styles = useSpring({\r\n    from: { opacity: \"0.1\" },\r\n    to: { opacity: \"1\" },\r\n    config: { duration: \"4500\" },\r\n  });\r\n  if (media_type === \"tv\") {\r\n    title = name;\r\n  }\r\n\r\n  function genres(genre_ids) {\r\n    const newArr = genre_ids.map(myFunction);\r\n    function myFunction(num) {\r\n      switch (num) {\r\n        case 12:\r\n          return \"Adventure\";\r\n\r\n        case 28:\r\n          return \"Action\";\r\n\r\n        case 16:\r\n          return \"Animation\";\r\n\r\n        case 35:\r\n          return \"Comedy\";\r\n\r\n        case 80:\r\n          return \"Crime\";\r\n\r\n        case 99:\r\n          return \"Documentary\";\r\n\r\n        case 18:\r\n          return \"Drama\";\r\n\r\n        case 14:\r\n          return \"Fantasy\";\r\n\r\n        case 36:\r\n          return \"History\";\r\n\r\n        case 27:\r\n          return \"Horror\";\r\n\r\n        case 9648:\r\n          return \"Mystery\";\r\n\r\n        case 10749:\r\n          return \"Romance\";\r\n\r\n        case 878:\r\n          return \"Science Fiction\";\r\n\r\n        case 53:\r\n          return \"Thriller\";\r\n\r\n        case 10752:\r\n          return \"War\";\r\n\r\n        case 37:\r\n          return \"Western\";\r\n\r\n        case 10759:\r\n          return \"Action & Adventure\";\r\n\r\n        case 16:\r\n          return \"Animation\";\r\n\r\n        case 35:\r\n          return \"Comedy\";\r\n\r\n        case 80:\r\n          return \"Crime\";\r\n\r\n        case 99:\r\n          return \"Documentary\";\r\n\r\n        case 18:\r\n          return \"Drama\";\r\n\r\n        case 10751:\r\n          return \"Family\";\r\n\r\n        case 10762:\r\n          return \"Kids\";\r\n\r\n        case 10763:\r\n          return \"News\";\r\n\r\n        case 10764:\r\n          return \"Reality\";\r\n\r\n        case 10765:\r\n          return \"Sci-Fi&Fantasy\";\r\n\r\n        case 10766:\r\n          return \"Soap\";\r\n\r\n        case 10767:\r\n          return \"Talk\";\r\n\r\n        case 10768:\r\n          return \"War&Politics\";\r\n      }\r\n    }\r\n\r\n    return newArr;\r\n  }\r\n\r\n  function update(genre) {\r\n    updateSelectedGenre(genre);\r\n  }\r\n  const Genres = (genreIds) => {\r\n    return genreIds.map((genreId, index) => (\r\n      <span\r\n        style={{\r\n          cursor: \"pointer\",\r\n        }}\r\n        onClick={() => {\r\n          update(genreId);\r\n        }}\r\n      >\r\n        {index > 0 && \",\"}\r\n        {genreId}\r\n      </span>\r\n    ));\r\n  };\r\n\r\n  function MyVerticallyCenteredModal(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Modal.Title\r\n            style={{\r\n              fontSize: \"2rem\",\r\n            }}\r\n            id=\"contained-modal-title-vcenter\"\r\n          >\r\n            {title}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          style={{\r\n            display: \"flex\",\r\n            gap: \"20px\",\r\n            backgroundColor: \"#dee5ec\",\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <Card.Img\r\n            variant=\"top\"\r\n            style={{ width: \"20rem\" }}\r\n            src={\"https://image.tmdb.org/t/p/w500\" + poster_path}\r\n          />\r\n\r\n          <div\r\n            class=\"plan-container\"\r\n            style={{\r\n              flexGrow: 1,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <p>{overview}</p>\r\n            <div> {Genres(genres(genre_ids))}</div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"reacte\">\r\n      <MyVerticallyCenteredModal // modal which is hidden\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n      <animated.div className=\"hehe\" style={styles}>\r\n        {\" \"}\r\n        <Card\r\n          className=\"card m-2 h-100\"\r\n          style={{ width: \"18rem\" }}\r\n          onClick={() => selectMovie(id)}\r\n        >\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={\"https://image.tmdb.org/t/p/w500\" + poster_path}\r\n          />\r\n          <Card.Body>\r\n            <Card.Title>{title}</Card.Title>\r\n\r\n            <Card.Text>\r\n              <div>\r\n                <span style={{ fontSize: \"15px\" }}>\r\n                  {Genres(genres(genre_ids))}\r\n                </span>\r\n              </div>\r\n              <div>\r\n                User rating :\r\n                <div\r\n                  id=\"rating\"\r\n                  style={{ borderRadius: \"50%\", textAlign: \"center\" }}\r\n                >\r\n                  {(Math.round(vote_average * 10) / 10).toFixed(1)}\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-12 text-center\">\r\n                <Button variant=\"flat\" onClick={() => setModalShow(true)}>\r\n                  {/*show modal*/}\r\n                  More info\r\n                </Button>\r\n              </div>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </animated.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movieinfo;\r\n","import React from \"react\";\r\nimport \"./Menu.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nfunction Menu({ popular, upcoming, bestranked }) {\r\n  return (\r\n    <ListGroup horizontal className=\"menu\">\r\n      <ListGroup.Item onClick={popular}>Popular</ListGroup.Item>\r\n      <ListGroup.Item onClick={upcoming}>Upcoming</ListGroup.Item>\r\n      <ListGroup.Item onClick={bestranked}>Best ranked</ListGroup.Item>\r\n    </ListGroup>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import \"react-bootstrap\";\nimport \"./App.css\";\nimport Navbar from \"./Components/Navbar.js\";\nimport React from \"react\";\nimport Movieinfo from \"./Components/Movieinfo\";\n\nimport Menu from \"./Components/Menu\";\n\n/*\nIn this app ,i ve choosen user scenario of movie database with live search functionality like on netflix. ITs created with React, React BOOtstrap,custom components and HOOKS with props sharing.\nOn every search or change of input of searchbar, api request is called and view is changed based on functionality of that call. Relevant information from api call is displayed and styled.   \n\nMartin Cucik\n*/\nfunction App() {\n  const [movies, setMovies] = React.useState([]);\n  const [searchValue, SetSearchValue] = React.useState();\n  const [selectedMovie, selectMovie] = React.useState();\n  const [selectedGenre, updateSelectedGenre] = React.useState(\"s\");\n  const [movieID, setMovieId] = React.useState();\n\n  const trendingurl =\n    \"https://api.themoviedb.org/3/trending/all/week?api_key=895828b8903ed3292aba730835d1e40e\";\n  const topratedurl =\n    \"https://api.themoviedb.org/3/movie/top_rated?api_key=895828b8903ed3292aba730835d1e40e&language=en-US&page=1\";\n  const upcomingurl =\n    \"https://api.themoviedb.org/3/movie/upcoming?api_key=895828b8903ed3292aba730835d1e40e&language=en-US&page=1\";\n  const similiarurl = `https://api.themoviedb.org/3/movie/${movieID}/similar?api_key=<<api_key>>&language=en-US&page=1`;\n  function recent() {\n    fetch(trendingurl)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setMovies(data.results);\n      });\n  }\n  function newest() {\n    fetch(upcomingurl)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setMovies(data.results);\n      });\n  }\n  function bestranked() {\n    fetch(topratedurl)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setMovies(data.results);\n      });\n  }\n  React.useEffect(() => {\n    console.log(selectedGenre);\n    console.log(selectedMovie);\n    console.log(selectedMovie);\n    if (typeof selectedMovie !== \"undefined\" && selectedMovie != null) {\n      fetch(\n        `https://api.themoviedb.org/3/movie/${selectedMovie}/similar?api_key=895828b8903ed3292aba730835d1e40e&language=en-US&page=1`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          setMovies(data.results);\n        });\n    }\n  }, [selectedGenre]);\n  React.useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=895828b8903ed3292aba730835d1e40e&language=en-US&query=${searchValue}&page=1&include_adult=false`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setMovies(data.results);\n      });\n  }, [searchValue]);\n  React.useEffect(() => {\n    fetch(\n      \"https://api.themoviedb.org/3/trending/all/week?api_key=895828b8903ed3292aba730835d1e40e\"\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setMovies(data.results);\n      });\n  }, []);\n\n  return (\n    <div>\n      <Navbar searchValue={searchValue} SetSearchValue={SetSearchValue} />\n      <Menu popular={recent} bestranked={bestranked} upcoming={newest} />\n      <div className=\"container1\">\n        <div className=\"movie\">\n          {movies.map((movieReq) => (\n            <Movieinfo\n              key={movieReq.id}\n              {...movieReq}\n              selectMovie={selectMovie}\n              updateSelectedGenre={updateSelectedGenre}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}